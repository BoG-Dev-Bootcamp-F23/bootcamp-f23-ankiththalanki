{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Documents\\\\Georgia Tech\\\\BitsOfGood\\\\bootcamp-f23-duckierstone42\\\\exer6\\\\marta-interface\\\\src\\\\components\\\\Train.js\";\n//In this file create the design for an exportable Train component that takes in data for one train and returns the display for it\nimport \"./Train.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = {\n  \"GOLD\": \"#e8b60d\",\n  \"BLUE\": \"#077ca9\",\n  \"GREEN\": \"#5da73a\",\n  \"RED\": \"#bf3b3c\"\n};\n// //The prop parameter would be a train object.        {\n//             \"DESTINATION\": \"DORAVILLE\",\n//             \"DIRECTION\": \"N\",\n//             \"EVENT_TIME\": \"2023-10-05T16:57:23Z\",\n//             \"HEAD_SIGN\": \"DORAVILLE\",\n//             \"LINE\": \"GOLD\",\n//             \"NEXT_ARR\": \"2023-10-05T16:59:38Z\",\n//             \"STATION\": \"DORAVILLE STATION\",\n//             \"TRAIN_ID\": \"303\",\n//             \"WAITING_SECONDS\": \"131\",\n//             \"WAITING_TIME\": \"2 min\",\n//             \"RESPONSETIMESTAMP\": \"2023-10-05T16:57:27Z\",\n//             \"VEHICLELONGITUDE\": \"33.895333\",\n//             \"VEHICLELATITUDE\": \"-84.293652\",\n//             \"DELAY\": \"T58S\",\n//             \"TRIP_ID\": \"3060\"\n//         },\n//I only need WAITING_TIME, LINE, DELAY, STATION (Which is the destination), \n// I need to add state information\nfunction toNormalCase(text) {\n  return text.toLowerCase().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n}\nexport default function Train(props) {\n  let color = colors[props.LINE];\n  let ontimeColor = \"#5da73a\";\n  let ontime = \"On time\";\n  if (props.DELAY === \"TOS\") {\n    ontime = \"Delayed\";\n    ontimeColor = \"#bf3b3c\";\n  }\n  const textStyle = {\n    color: ontimeColor\n  };\n  const lineStyle = {\n    backgroundColor: color\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"train\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftstuff\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"M\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trainInformation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"station-information\",\n          children: [\"Midtown Station \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://static.thenounproject.com/png/2094742-200.png\",\n            width: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), \" \", toNormalCase(props.STATION)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subinfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\",\n            style: lineStyle,\n            children: toNormalCase(props.LINE)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: textStyle,\n            children: ontime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      style: textStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timevalue\",\n        children: props.WAITING_TIME.split(\" \")[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), \"min\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n}\n_c = Train;\nvar _c;\n$RefreshReg$(_c, \"Train\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","colors","toNormalCase","text","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","Train","props","color","LINE","ontimeColor","ontime","DELAY","textStyle","lineStyle","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","width","STATION","style","id","WAITING_TIME","_c","$RefreshReg$"],"sources":["C:/Users/ankit/OneDrive/Documents/Georgia Tech/BitsOfGood/bootcamp-f23-duckierstone42/exer6/marta-interface/src/components/Train.js"],"sourcesContent":["//In this file create the design for an exportable Train component that takes in data for one train and returns the display for it\r\nimport \"./Train.css\";\r\n\r\nconst colors = {\r\n\r\n    \"GOLD\" : \"#e8b60d\",\r\n    \"BLUE\" : \"#077ca9\",\r\n    \"GREEN\" : \"#5da73a\",\r\n    \"RED\" : \"#bf3b3c\"\r\n};\r\n// //The prop parameter would be a train object.        {\r\n//             \"DESTINATION\": \"DORAVILLE\",\r\n//             \"DIRECTION\": \"N\",\r\n//             \"EVENT_TIME\": \"2023-10-05T16:57:23Z\",\r\n//             \"HEAD_SIGN\": \"DORAVILLE\",\r\n//             \"LINE\": \"GOLD\",\r\n//             \"NEXT_ARR\": \"2023-10-05T16:59:38Z\",\r\n//             \"STATION\": \"DORAVILLE STATION\",\r\n//             \"TRAIN_ID\": \"303\",\r\n//             \"WAITING_SECONDS\": \"131\",\r\n//             \"WAITING_TIME\": \"2 min\",\r\n//             \"RESPONSETIMESTAMP\": \"2023-10-05T16:57:27Z\",\r\n//             \"VEHICLELONGITUDE\": \"33.895333\",\r\n//             \"VEHICLELATITUDE\": \"-84.293652\",\r\n//             \"DELAY\": \"T58S\",\r\n//             \"TRIP_ID\": \"3060\"\r\n//         },\r\n//I only need WAITING_TIME, LINE, DELAY, STATION (Which is the destination), \r\n// I need to add state information\r\nfunction toNormalCase(text) {\r\n    return text.toLowerCase().split(' ').map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\r\n}\r\nexport default function Train(props) {\r\n    let color = colors[props.LINE];\r\n    let ontimeColor = \"#5da73a\";\r\n    let ontime = \"On time\";\r\n    if (props.DELAY === \"TOS\") {\r\n        ontime = \"Delayed\";\r\n        ontimeColor = \"#bf3b3c\";\r\n    }\r\n\r\n    const textStyle = {\r\n        color: ontimeColor,\r\n    }\r\n    const lineStyle = {\r\n        backgroundColor: color,\r\n    }\r\n    return (<div className=\"train\">\r\n        <div className=\"leftstuff\">\r\n            <h1>M</h1>\r\n            <div className=\"trainInformation\">\r\n                <div className=\"station-information\">\r\n                Midtown Station <img src=\"https://static.thenounproject.com/png/2094742-200.png\" width=\"20\"/> {toNormalCase(props.STATION)}\r\n                </div>\r\n                <div className=\"subinfo\">\r\n                <div className=\"line\" style={lineStyle}>{toNormalCase(props.LINE)}</div>\r\n                <div style={textStyle}>{ontime}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"time\" style={textStyle}>\r\n            <div id=\"timevalue\">{props.WAITING_TIME.split(\" \")[0]}</div>\r\n            min\r\n        </div>\r\n    </div>);\r\n    \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}